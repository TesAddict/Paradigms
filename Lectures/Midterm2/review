(define x (cons (list 1 2) (list 3 4)))

(define (atom? element)
  (and (not (null? element)) (not (pair? element))))

;; count-leaves of a tree x is count-leaves of the car of x plus
;; count-leaves of the cdr of x.
;; count-leaves of a leaf should return 1. 

(define (count-leaves lst)
  (cond ((null? lst) 0)
        ((atom? lst) 1)
        (else (+ (count-leaves (car lst)) (count-leaves (cdr lst))))))

  

